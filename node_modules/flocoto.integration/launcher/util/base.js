"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.baseOpts = void 0;
const path_1 = __importDefault(require("path"));
const load_1 = require("./load");
const fs_1 = __importDefault(require("fs"));
const merge_1 = require("./merge");
const defaults_1 = require("../../context/defaults");
function baseOpts(yargs, parse) {
    // @ts-ignore
    return yargs.env("SSMS_")
        .options("env", {
        default: defaults_1.Defaults.ENV,
    }).option("mode", {
        type: "string",
        description: "Start application mode",
        choices: ["dev", "public", "prod", "test"],
        default: "dev",
    })
        .config("env", "Caminho para ficheiro das variaveis", envConfig => {
        let loaded = (0, load_1.loadConfigsFile)(envConfig, "utf8");
        let envReplace = loaded["env"];
        loaded["env"] = envConfig;
        loaded["env"] = envConfig;
        if (envReplace && !path_1.default.isAbsolute(envReplace)) {
            envReplace = path_1.default.join(path_1.default.dirname(envConfig), envReplace);
        }
        if (envReplace && !fs_1.default.existsSync(envReplace)) {
            envReplace = null;
        }
        let news;
        if (envReplace && envReplace !== envConfig) {
            news = (0, load_1.loadConfigsFile)(envReplace, "utf8");
            news["env"] = loaded["env"];
            news["envReplace"] = envReplace;
        }
        if (news) {
            loaded = (0, merge_1.mergeObjects)(loaded, news);
        }
        let result = {};
        Object.assign(result, loaded);
        if (typeof parse === "function") {
            Object.assign(result, parse(result));
        }
        return result;
    })
        .parserConfiguration({ "strip-aliased": true });
}
exports.baseOpts = baseOpts;
//# sourceMappingURL=base.js.map