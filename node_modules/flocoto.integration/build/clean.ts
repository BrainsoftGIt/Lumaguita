import path from "path";
import fs from "fs";
import Path from "path";

export function cleanJs( dirname ){
    //language=file-reference
    if( !dirname ) dirname = path.join( __dirname, "../" );
    [

        { basename: /*language=file-reference*/ "/bin",      math: /.*.js$/, },
        { basename: /*language=file-reference*/ "/bin",      math: /.*.js.map$/, },
        { basename: /*language=file-reference*/ "/build",       math: /.*.js$/, },
        { basename: /*language=file-reference*/ "/build",      math: /.*.js.map$/, },
        { basename: /*language=file-reference*/ "/src",    math: /.*.js$/, },
        { basename: /*language=file-reference*/ "/src",    math: /.*.js.map$/ },
    ].forEach( (clean, index) => {
        fs.readdirSync( path.join( dirname, clean.basename ), { recursive: true } )
            .forEach( (file) => {
                let filename = Path.join( dirname, clean.basename, file );
                let state = fs.statSync( filename );
                if( !state.isFile() ) return;
                if( !clean.math.test( filename ) ) return;
                fs.unlinkSync( filename );
                console.log( `[unlink] ${ new URL(`file://${filename}`).href }... ok!` );
            })
    })
}

if( require.main.filename === __filename ){
    //language=file-reference
    cleanJs( path.join(__dirname, "../"))
}

