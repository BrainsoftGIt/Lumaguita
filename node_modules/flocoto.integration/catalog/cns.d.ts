import tns from "./tns";
import { db } from "kitres";

namespace cns {
  export type TypeProperties = "*";

  export interface TypeOfMaps<T extends { [K in TypeProperties]?: T[K] }> {
    "pg_catalog.jsonb": db.CatalogTypesMap<"jsonb">;
    jsonb: db.CatalogTypesMap<"jsonb">;
    "pg_catalog.oid": db.CatalogTypesMap<"oid">;
    oid: db.CatalogTypesMap<"oid">;
    "pg_catalog.uuid": db.CatalogTypesMap<"uuid">;
    uuid: db.CatalogTypesMap<"uuid">;
    "pg_catalog.tid": db.CatalogTypesMap<"tid">;
    tid: db.CatalogTypesMap<"tid">;
    "pg_catalog.bool": db.CatalogTypesMap<"bool">;
    bool: db.CatalogTypesMap<"bool">;
    boolean: db.CatalogTypesMap<"bool">;
    "pg_catalog.varchar": db.CatalogTypesMap<"varchar">;
    varchar: db.CatalogTypesMap<"varchar">;
    "character varying": db.CatalogTypesMap<"varchar">;
    "pg_catalog.xid": db.CatalogTypesMap<"xid">;
    xid: db.CatalogTypesMap<"xid">;
    "pg_catalog.int4": db.CatalogTypesMap<"int4">;
    int4: db.CatalogTypesMap<"int4">;
    integer: db.CatalogTypesMap<"int4">;
    "pg_catalog.cid": db.CatalogTypesMap<"cid">;
    cid: db.CatalogTypesMap<"cid">;
    "pg_catalog.timestamptz": db.CatalogTypesMap<"timestamptz">;
    timestamptz: db.CatalogTypesMap<"timestamptz">;
    "timestamp with time zone": db.CatalogTypesMap<"timestamptz">;
    "pg_catalog.int2": db.CatalogTypesMap<"int2">;
    int2: db.CatalogTypesMap<"int2">;
    smallint: db.CatalogTypesMap<"int2">;
  }
}

export default cns;
