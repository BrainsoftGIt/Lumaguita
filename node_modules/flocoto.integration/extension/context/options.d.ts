import { DotEnv } from "kitres";
import { DefaultExtEnvObject, DefaultExtEnvProps } from "./defaults";
export type ObjectOptions = DotEnv & typeof DefaultExtEnvObject;
type ObjectKeys<T> = {
    [K in keyof T]: T[K] extends object ? K : never;
}[keyof T];
type ConcatKeysWithTypes<T> = {
    [K in ObjectKeys<T> as `${K & string}.${keyof T[K] & string}`]: T[K][keyof T[K]];
};
type CombinedEnvOptions = ConcatKeysWithTypes<ObjectOptions>;
export type ArgsOptions = CombinedEnvOptions;
export type EnvOptions = {
    [K in keyof typeof DefaultExtEnvProps]?: typeof DefaultExtEnvProps[K];
} & {
    [K in keyof typeof DefaultExtEnvObject]?: typeof DefaultExtEnvObject[K];
};
export {};
//# sourceMappingURL=options.d.ts.map