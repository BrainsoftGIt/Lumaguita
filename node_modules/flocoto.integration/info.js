"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const yargs_1 = __importDefault(require("yargs"));
const helpers_1 = require("yargs/helpers");
var flocoto_info;
(function (flocoto_info) {
    const argv = (0, yargs_1.default)((0, helpers_1.hideBin)(process.argv))
        .option("flocoto", {
        type: "string",
    }).option("flocoto-manifest", {
        type: "string",
    }).option("flocoto-master-host", {
        type: "string",
    }).option("flocoto-master-port", {
        type: "number",
    }).option("flocoto-master-host", {
        type: "string",
    }).option("flocoto-master-protocol", {
        type: "string",
        choices: ["http", "https"]
    }).parse();
    const _masterInfo = {
        host: argv["flocoto-master-host"],
        port: argv["flocoto-master-port"],
        protocol: argv["flocoto-master-protocol"],
        get href() {
            return `${this.protocol}://${this.host}:${this.port}`;
        }
    };
    function manifestInfo(manifestFile) {
        if (!fs_1.default.existsSync(manifestFile))
            return;
        let manifest = require(manifestFile);
        if (!manifest.name)
            return;
        if (!manifest.flocoto)
            return;
        if (!manifest.flocoto.modular)
            return;
        if (!manifest.flocoto)
            return;
        if (!manifest.flocoto.fork)
            return;
        return {
            flocotoName: argv["flocoto"],
            manifestFile: argv["flocoto-manifest"],
            manifest: Object.assign(manifest.flocoto, {
                name: manifest.name
            }),
            masterInfo: _masterInfo,
            referer(viewport) {
                return path_1.default.posix.join("/flocoto", this.flocotoName, viewport || "default");
            }
        };
    }
    flocoto_info.manifestInfo = manifestInfo;
    const _info = (() => {
        let _manifestFile = argv["flocoto-manifest"];
        return manifestInfo(_manifestFile);
    })();
    flocoto_info.isFlocotoModule = !!_info;
    flocoto_info.flocotoInfo = _info;
})(flocoto_info || (flocoto_info = {}));
module.exports = flocoto_info;
//# sourceMappingURL=info.js.map