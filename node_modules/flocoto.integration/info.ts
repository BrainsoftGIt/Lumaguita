import fs from "fs";
import Path from "path";
import {FlocotoManifest, FlocotoManifestInfo} from "./index";
import yargs from "yargs";
import {hideBin} from "yargs/helpers";

namespace flocoto_info {

    const argv = yargs( hideBin(process.argv))
        .option("flocoto", {
            type: "string",

        }).option("flocoto-manifest", {
            type: "string",

        }).option("flocoto-master-host", {
            type: "string",

        }).option("flocoto-master-port", {
            type: "number",

        }).option("flocoto-master-host", {
            type: "string",

        }).option("flocoto-master-protocol", {
            type: "string",
            choices: ["http", "https"]
        }).parse();

    const _masterInfo = {
        host: argv["flocoto-master-host"] as string,
        port: argv["flocoto-master-port"] as number,
        protocol: argv["flocoto-master-protocol"] as "http"|"https",
        get href(){
            return `${ this.protocol }://${ this.host }:${ this.port}`
        }
    }

    export function manifestInfo( manifestFile:string){
        if( !fs.existsSync( manifestFile ) ) return;
        let manifest: {
            name?:string,
            flocoto?:FlocotoManifest
        } = require( manifestFile );

        if( !manifest.name ) return;
        if( !manifest.flocoto ) return;
        if( !manifest.flocoto.modular ) return;
        if( !manifest.flocoto ) return;
        if( !manifest.flocoto.fork ) return;
        return {
            flocotoName: argv["flocoto"],
            manifestFile: argv["flocoto-manifest"],
            manifest: Object.assign( manifest.flocoto, {
                name: manifest.name
            }) as FlocotoManifestInfo,
            masterInfo: _masterInfo,
            referer( viewport:string){
                return Path.posix.join("/flocoto", this.flocotoName, viewport||"default" )
            }
        }
    }

    const _info =(()=>{
        let _manifestFile = argv["flocoto-manifest"];
        return manifestInfo( _manifestFile );
    })()

    export const isFlocotoModule = !!_info;
    export const flocotoInfo = _info;
}

export = flocoto_info;