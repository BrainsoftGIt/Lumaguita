import tns from "./tns";
import { db } from "kitres";

namespace cns {
  export type TypeProperties = "*";

  export interface TypeOfMaps<T extends { [K in TypeProperties]?: T[K] }> {
    "pg_catalog.trigger": db.CatalogTypesMap<"trigger">;
    trigger: db.CatalogTypesMap<"trigger">;
    "pg_catalog.int2": db.CatalogTypesMap<"int2">;
    int2: db.CatalogTypesMap<"int2">;
    smallint: db.CatalogTypesMap<"int2">;
    "pg_catalog.bool": db.CatalogTypesMap<"bool">;
    bool: db.CatalogTypesMap<"bool">;
    boolean: db.CatalogTypesMap<"bool">;
    "pg_catalog.name": db.CatalogTypesMap<"name">;
    name: db.CatalogTypesMap<"name">;
    "pg_catalog.timestamp": db.CatalogTypesMap<"timestamp">;
    timestamp: db.CatalogTypesMap<"timestamp">;
    "timestamp without time zone": db.CatalogTypesMap<"timestamp">;
    "pg_catalog.jsonb": db.CatalogTypesMap<"jsonb">;
    jsonb: db.CatalogTypesMap<"jsonb">;
    "pg_catalog.regproc": db.CatalogTypesMap<"regproc">;
    regproc: db.CatalogTypesMap<"regproc">;
    "pg_catalog.text": db.CatalogTypesMap<"text">;
    text: db.CatalogTypesMap<"text">;
    "pg_catalog.regnamespace": db.CatalogTypesMap<"regnamespace">;
    regnamespace: db.CatalogTypesMap<"regnamespace">;
    "pg_catalog.date": db.CatalogTypesMap<"date">;
    date: db.CatalogTypesMap<"date">;
    "pg_catalog.regprocedure": db.CatalogTypesMap<"regprocedure">;
    regprocedure: db.CatalogTypesMap<"regprocedure">;
    "pg_catalog.regclass": db.CatalogTypesMap<"regclass">;
    regclass: db.CatalogTypesMap<"regclass">;
    "pg_catalog.numeric": db.CatalogTypesMap<"numeric">;
    numeric: db.CatalogTypesMap<"numeric">;
    "pg_catalog.regrole": db.CatalogTypesMap<"regrole">;
    regrole: db.CatalogTypesMap<"regrole">;
    "pg_catalog.varchar": db.CatalogTypesMap<"varchar">;
    varchar: db.CatalogTypesMap<"varchar">;
    "character varying": db.CatalogTypesMap<"varchar">;
    "pg_catalog.oid": db.CatalogTypesMap<"oid">;
    oid: db.CatalogTypesMap<"oid">;
    "pg_catalog.cid": db.CatalogTypesMap<"cid">;
    cid: db.CatalogTypesMap<"cid">;
    "pg_catalog.interval": db.CatalogTypesMap<"interval">;
    interval: db.CatalogTypesMap<"interval">;
    "pg_catalog.xid": db.CatalogTypesMap<"xid">;
    xid: db.CatalogTypesMap<"xid">;
    "pg_catalog.anyelement": db.CatalogTypesMap<"anyelement">;
    anyelement: db.CatalogTypesMap<"anyelement">;
    "pg_catalog.char": db.CatalogTypesMap<"char">;
    char: db.CatalogTypesMap<"char">;
    '"char"': db.CatalogTypesMap<"char">;
    "pg_catalog.tid": db.CatalogTypesMap<"tid">;
    tid: db.CatalogTypesMap<"tid">;
    "pg_catalog.json": db.CatalogTypesMap<"json">;
    json: db.CatalogTypesMap<"json">;
    "pg_catalog.float8": db.CatalogTypesMap<"float8">;
    float8: db.CatalogTypesMap<"float8">;
    "double precision": db.CatalogTypesMap<"float8">;
    "pg_catalog.regtype": db.CatalogTypesMap<"regtype">;
    regtype: db.CatalogTypesMap<"regtype">;
    "pg_catalog.int8": db.CatalogTypesMap<"int8">;
    int8: db.CatalogTypesMap<"int8">;
    bigint: db.CatalogTypesMap<"int8">;
    "pg_catalog.bpchar": db.CatalogTypesMap<"bpchar">;
    bpchar: db.CatalogTypesMap<"bpchar">;
    character: db.CatalogTypesMap<"bpchar">;
    "pg_catalog.timestamptz": db.CatalogTypesMap<"timestamptz">;
    timestamptz: db.CatalogTypesMap<"timestamptz">;
    "timestamp with time zone": db.CatalogTypesMap<"timestamptz">;
    "pg_catalog.record": db.CatalogTypesMap<"record">;
    record: db.CatalogTypesMap<"record">;
    "pg_catalog.uuid": db.CatalogTypesMap<"uuid">;
    uuid: db.CatalogTypesMap<"uuid">;
    "pg_catalog.int4": db.CatalogTypesMap<"int4">;
    int4: db.CatalogTypesMap<"int4">;
    integer: db.CatalogTypesMap<"int4">;
    "pg_catalog.event_trigger": db.CatalogTypesMap<"event_trigger">;
    event_trigger: db.CatalogTypesMap<"event_trigger">;
    "pg_catalog.void": db.CatalogTypesMap<"void">;
    void: db.CatalogTypesMap<"void">;
  }
}

export default cns;
